command: docker container restart
aliases: docker container restart, docker restart
short: 重启一个或多个容器
long: 重启一个或多个容器
usage: docker container restart [OPTIONS] CONTAINER [CONTAINER...]
pname: docker container
plink: docker_container.yaml
options:
    - option: signal
      shorthand: s
      value_type: string
      description: 发送给容器的信号
      details_url: '#signal'
      deprecated: false
      hidden: false
      experimental: false
      experimentalcli: false
      kubernetes: false
      swarm: false
    - option: time
      value_type: int
      default_value: "0"
      description: |
        在强制终止容器前等待的秒数（已弃用：请使用 --timeout）
      deprecated: true
      hidden: true
      experimental: false
      experimentalcli: false
      kubernetes: false
      swarm: false
    - option: timeout
      shorthand: t
      value_type: int
      default_value: "0"
      description: 在强制终止容器前等待的秒数
      details_url: '#timeout'
      deprecated: false
      hidden: false
      experimental: false
      experimentalcli: false
      kubernetes: false
      swarm: false
inherited_options:
    - option: help
      value_type: bool
      default_value: "false"
      description: 打印使用帮助
      deprecated: false
      hidden: true
      experimental: false
      experimentalcli: false
      kubernetes: false
      swarm: false
examples: |-
    ```console
    $ docker restart my_container
    ```


    ### 使用信号停止容器 (-s, --signal) {#signal}

    `--signal` 选项会向容器发送系统调用信号以使其退出。
    该信号可以是格式为 `SIG<NAME>` 的信号名（例如 `SIGKILL`），
    也可以是与内核系统调用表中的位置相匹配的无符号数字（例如 `9`）。
    可用信号请参阅 [signal(7)](https://man7.org/linux/man-pages/man7/signal.7.html)。

    默认信号由镜像的 [`StopSignal`](https://github.com/opencontainers/image-spec/blob/v1.1.0/config.md) 定义，
    可在构建镜像时通过 Dockerfile 指令 [`STOPSIGNAL`](/reference/dockerfile/#stopsignal) 设置，
    或在创建容器时通过 [`--stop-signal`](/reference/cli/docker/container/run/#stop-signal) 选项进行配置。
    如果未为容器配置信号，则默认使用 `SIGTERM`。

    ### 使用超时停止容器 (-t, --timeout) {#timeout}

    `--timeout` 选项用于在发送预定义的系统调用信号（见 [`--signal`](#signal)）后，
    设置等待容器停止的秒数。若超时后容器仍未退出，将以 `SIGKILL` 强制终止。

    当将 `--timeout` 设为 `-1` 时，不应用超时，守护进程将无限期等待容器退出。

    创建容器时可通过 [`--stop-timeout`](/reference/cli/docker/container/run/#stop-timeout) 选项指定默认超时时间。
    如果未为容器配置默认值，则由守护进程决定：Linux 容器默认 10 秒，Windows 容器默认 30 秒。
deprecated: false
hidden: false
experimental: false
experimentalcli: false
kubernetes: false
swarm: false

