command: docker container rm
aliases: docker container rm, docker container remove, docker rm
short: 删除一个或多个容器
long: 删除一个或多个容器
usage: docker container rm [OPTIONS] CONTAINER [CONTAINER...]
pname: docker container
plink: docker_container.yaml
options:
    - option: force
      shorthand: f
      value_type: bool
      default_value: "false"
      description: 强制删除正在运行的容器（使用 SIGKILL 信号）
      details_url: '#force'
      deprecated: false
      hidden: false
      experimental: false
      experimentalcli: false
      kubernetes: false
      swarm: false
    - option: link
      shorthand: l
      value_type: bool
      default_value: "false"
      description: 删除指定的链接
      details_url: '#link'
      deprecated: false
      hidden: false
      experimental: false
      experimentalcli: false
      kubernetes: false
      swarm: false
    - option: volumes
      shorthand: v
      value_type: bool
      default_value: "false"
      description: 删除与容器关联的匿名卷
      details_url: '#volumes'
      deprecated: false
      hidden: false
      experimental: false
      experimentalcli: false
      kubernetes: false
      swarm: false
inherited_options:
    - option: help
      value_type: bool
      default_value: "false"
      description: 打印使用说明
      deprecated: false
      hidden: true
      experimental: false
      experimentalcli: false
      kubernetes: false
      swarm: false
examples: |-
    ### 删除容器

    该命令会删除名为 `/redis` 的容器。

    ```console
    $ docker rm /redis

    /redis
    ```

    ### 删除默认桥接网络上通过 `--link` 指定的链接 (--link) {#link}

    该命令会删除默认桥接网络上 `/webapp` 和 `/redis` 容器之间的底层链接,
    移除两个容器之间的所有网络通信。注意,当 `--link` 用于用户自定义网络时,
    此操作不适用。

    ```console
    $ docker rm --link /webapp/redis

    /webapp/redis
    ```

    ### 强制删除正在运行的容器 (--force) {#force}

    该命令会强制删除正在运行的容器。

    ```console
    $ docker rm --force redis

    redis
    ```

    名为 `redis` 的容器内的主进程将收到 `SIGKILL` 信号,然后容器会被删除。

    ### 删除所有已停止的容器

    使用 [`docker container prune`](/reference/cli/docker/container/prune/) 命令可以删除所有
    已停止的容器,或者参考 [`docker system prune`](/reference/cli/docker/system/prune/)
    命令来删除未使用的容器以及其他 Docker 资源,例如未使用的镜像和网络。

    另一种方法是使用 `docker ps` 命令配合 `-q` / `--quiet` 选项来生成要删除的容器 ID 列表,
    然后将该列表作为 `docker rm` 命令的参数。

    组合命令的方式更加灵活,但可移植性较差,因为它依赖于 shell 提供的功能,
    并且具体语法可能因使用的 shell 而异。如果在 Windows 上使用此方法,
    建议使用 PowerShell 或 Bash。

    下面的示例使用 `docker ps -q` 打印所有已退出容器的 ID(`--filter status=exited`),
    然后使用 `docker rm` 命令删除这些容器:

    ```console
    $ docker rm $(docker ps --filter status=exited -q)
    ```

    或者,使用 Linux 的 `xargs` 工具:

    ```console
    $ docker ps --filter status=exited -q | xargs docker rm
    ```

    ### 删除容器及其卷 (-v, --volumes) {#volumes}

    ```console
    $ docker rm --volumes redis
    redis
    ```

    该命令会删除容器以及与其关联的所有卷。
    注意,如果卷是通过名称指定的,则不会被删除。

    ### 删除容器并选择性地删除卷

    ```console
    $ docker create -v awesome:/foo -v /bar --name hello redis
    hello

    $ docker rm -v hello
    ```

    在此示例中,`/foo` 对应的卷会保留,但 `/bar` 对应的卷会被删除。
    对于通过 `--volumes-from` 继承的卷,也遵循相同的行为。
deprecated: false
hidden: false
experimental: false
experimentalcli: false
kubernetes: false
swarm: false

