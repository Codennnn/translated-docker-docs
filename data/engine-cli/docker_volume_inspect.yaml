command: docker volume inspect
short: 显示一个或多个卷的详细信息
long: |-
    返回卷的相关信息。默认情况下，该命令会以 JSON 数组形式呈现所有结果。
    你可以指定自定义的输出格式，对每个结果应用给定的模板。
    Go 的 [text/template](https://pkg.go.dev/text/template) 包详细说明了
    模板语法与格式细节。
usage: docker volume inspect [OPTIONS] VOLUME [VOLUME...]
pname: docker volume
plink: docker_volume.yaml
options:
    - option: format
      shorthand: f
      value_type: string
      description: |-
        使用自定义模板格式化输出：
        'json'：             以 JSON 格式输出
        'TEMPLATE'：         使用给定的 Go 模板渲染输出
        使用模板格式化输出的更多信息，参阅 https://docs.docker.com/go/formatting/
      details_url: '#format'
      deprecated: false
      hidden: false
      experimental: false
      experimentalcli: false
      kubernetes: false
      swarm: false
inherited_options:
    - option: help
      value_type: bool
      default_value: "false"
      description: Print usage
      
      description: 打印用法
      deprecated: false
      hidden: true
      experimental: false
      experimentalcli: false
      kubernetes: false
      swarm: false
examples: |-
    ```console
    $ docker volume create myvolume

    myvolume
    ```

    使用 `docker volume inspect` 命令查看该卷的配置信息：

    ```console
    $ docker volume inspect myvolume
    ```

    输出为 JSON 格式，例如：

    ```json
    [
      {
        "CreatedAt": "2020-04-19T11:00:21Z",
        "Driver": "local",
        "Labels": {},
        "Mountpoint": "/var/lib/docker/volumes/8140a838303144125b4f54653b47ede0486282c623c3551fbc7f390cdc3e9cf5/_data",
        "Name": "myvolume",
        "Options": {},
        "Scope": "local"
      }
    ]
    ```

    ### 格式化输出（--format） {#format}

    使用 `--format` 结合 Go 模板来格式化输出，例如打印 `Mountpoint` 属性：

    ```console
    $ docker volume inspect --format '{{ .Mountpoint }}' myvolume

    /var/lib/docker/volumes/myvolume/_data
    ```
deprecated: false
hidden: false
min_api_version: "1.21"
experimental: false
experimentalcli: false
kubernetes: false
swarm: false

